
version: '3.4'
services:

  nginx:
    stdin_open: true
    ports: 
      - 80:80
      - 443:443

  portainer:
    stdin_open: true

  redis:
    stdin_open: true
    environment:
      - ALLOW_EMPTY_PASSWORD=yes

  redis-commander:
    environment:
      - REDIS_HOSTS=local:redis:6379
      - PORT=8083

  mongodb:
    stdin_open: true
    environment:
      - MONGO_INITDB_DATABASE=${NEST_DBNAME_MONGO}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}

  mongo-express:
    stdin_open: true
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=secret
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_SITE_BASEURL=/__info__/mongo-express

  apiauth:
    deploy:
      replicas: 2
      update_config: 
        parallelism: 2
        delay: 10s
      restart_policy: 
        condition: any
    build: 
      dockerfile: Dockerfile
      # target: dev
    args: 
      NODE_ENV: production
    stdin_open: true
    volumes: 
      - /app/node_modules 
      - ../../app/services/auth:/app
    environment:
      - REDIS=redis
      - PORT=5002
      # to specify any other option for connection add ?retryWrites=true
      # to import data in mongo mongorestore --gzip --archive=sampledata.archive.gz
      - DBURL=mongodb://<MONGOUSER>:<MONGOPASS>@mongodb:27017
      - DBNAME=${NEST_DBNAME_MONGO}
      - NODE_ENV=production
      - MONGOPASS=${NEST_MONGO_PASSWORD}
      - MONGOUSER=${NEST_MONGO_USER}
      - CORS=${NEST_CORS}
      - JWT_KEY=${NEST_JWT_KEY}
      - JWT_TTL=${NEST_JWT_TTL}
      - RESET_TOKEN_EXP=${NEST_RESET_TOKEN_EXP}
